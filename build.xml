<project name="Ceylon IDE Common code" default="test">

    <property file="build.properties" />
    <property name="ceylon.verbosity" value="false"/>
    <property name="ceylon.executable" value="${dist.bin.dir}/ceylon"/>
    <property name="out.repo" location="${basedir}/modules"/>
    
    <property name="osgi" location="${basedir}/osgi" />
    <property name="osgi.p2" location="${osgi}/p2" />
    <property name="osgi.dist" location="${osgi}/dist" />
    <property name="osgi.build" location="${osgi}/build" />
    <property name="osgi.dist.plugins" location="${osgi.dist}/plugins" />
    <property name="osgi.dist.features" location="${osgi.dist}/features" />
    <property name="eclipse.project.path" location="${basedir}/../ceylon-ide-eclipse"/>
    
    <tstamp>
        <format property="qualifier" timezone="GMT" pattern="'v'yyyyMMdd-HHmm"/>
    </tstamp>        
    
    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
            <pathelement location="${ceylon.root.dir}/lib/ant-contrib-1.0b3.jar"/>
        </classpath>
    </taskdef>

    <taskdef resource="taskdef.properties">
        <classpath>
            <pathelement path="${ceylon.root.dir}/lib/org.osgi.impl.bundle.repoindex.ant-2.1.2.jar" />
        </classpath>
    </taskdef>

    
    <!-- Local repository -->
    <property name="ceylon.repo.dir" location="${user.home}/.ceylon/repo" />
    
    <path id="ant-tasks">
        <pathelement location="${ceylon.ant.lib}"/>
    </path>
    
    <target name="ceylondefs" unless="ceylondefined">
        <property name="ceylondefined" value="true" />

        <typedef resource="org/eclipse/ceylon/ant/antlib.xml" classpathref="ant-tasks"/>

        <reposet id="reposet.compile.source">
            <repo url="${out.repo}"/>
            <repo url="${basedir}/repo"/>
            <repo url="${ceylon.repo.dir}"/>
        </reposet>

        <reposet id="reposet.compile.test">
            <repo url="${out.repo}"/>
            <repo url="${basedir}/../ceylon-sdk/modules"/>
            <repo url="${basedir}/repo"/>
            <repo url="${ceylon.repo.dir}"/>
        </reposet>
    
        <reposet id="reposet.run.test">
            <reposet refid="reposet.compile.test"/>
            <repo url="${out.repo}"/>
            <repo url="${ceylon.repo.dir}"/>
        </reposet>
    
        <moduleset id="modules.source">
            <module name="org.eclipse.ceylon.ide.common"/>
        </moduleset>
    
        <moduleset id="modules.test">
            <module name="test.org.eclipse.ceylon.ide.common"/>
        </moduleset>
    </target>
    
    <target name="clean"
        description="Deletes the test-modules and modules directories">
        <delete dir="${out.repo}"/>
        <delete dir="${osgi.dist}"/>
        <delete dir="${osgi.build}"/>
    </target>
    
    <target name="compile-source" depends="ceylondefs"
            description="Compiles the Ceylon IDE Common modules">
        <ceylon-compile
            verbose="${ceylon.verbosity}"
            encoding="UTF-8"
            pack200="true"
            out="${out.repo}"
            fork="true">
            <reposet refid="reposet.compile.source"/>
            <moduleset refid="modules.source"/>
        </ceylon-compile>
    </target>

    <target name="compile" depends="compile-source"
            description="Compiles the Ceylon IDE Common module to the 'modules' repository" />

    <path id="test-sources-path">
        <pathelement location="test-source"/>
    </path>
    
    <property name="test-sources" refid="test-sources-path"/>
    
    <target name="compile-test" depends="ceylondefs"
        description="Compiles the test module" >
        <ceylon-compile
            src="${test-sources}"
            out="${out.repo}"
            verbose="${ceylon.verbosity}"
            encoding="UTF-8"
            fork="true">
            <reposet refid="reposet.compile.test"/> 
            <moduleset refid="modules.test"/>
        </ceylon-compile>
    </target>

    <target name="test" depends="compile,test-quick"
        description="Compiles the module then runs the compiled test module" />

    <target name="test-quick" depends="compile-test"
        description="Runs the compiled test module">
        <ceylon-test
            failonerror="false"
            tap="test-output.tap"
            fork="true">
            <reposet refid="reposet.run.test"/>
            <moduleset refid="modules.test"/>
        </ceylon-test>
    </target>

    <target name="publish" depends="publish-internal"
            description="Copies the Ceylon IDE Common modules to the user's repository">
    </target>
    <target name="publish-internal" depends="compile">
        <copy todir="${ceylon.repo.dir}" overwrite="true">
            <fileset dir="${out.repo}">
                <include name="org/eclipse/ceylon/ide/common/**"/>
            </fileset>
        </copy>
    </target>

    <target name="copyModuleArchiveForOSGI">
        <loadproperties>
            <zipentry zipfile="${currentFile}" name="META-INF/MANIFEST.MF"/>
             <filterchain>
                <linecontainsregexp>
                    <regexp pattern="^(Bundle-SymbolicName|Bundle-Version)"/>
                </linecontainsregexp>
                 <replaceregex pattern="\s+$" replace=""/>
                 <replaceregex pattern="^\s+" replace=""/>
              </filterchain>
        </loadproperties>
        <if>
            <isset property="Bundle-SymbolicName"/>
            <then>
                <copy file="${currentFile}" 
                    tofile="${osgi.dist.plugins}/${Bundle-SymbolicName}_${Bundle-Version}.jar" 
                    overwrite="true"/>
            </then>
        </if>
    </target>
    
    <target name="retrieveDependencies" depends="ceylondefs">
            <ceylon-copy
                    offline="true"
                    verbose="${ceylon.verbosity}"
                    nodefaultrepositories="true"
                    withdependencies="true"
                    out="${osgi.build}/tempRepo"
                    fork="true">
                    <rep url="./modules"/>
                    <rep url="./repo"/>
                    <sourcemodules/>
            </ceylon-copy>
    </target>

	<target name="osgi-quick" depends="retrieveDependencies">
        <mkdir dir="${osgi.dist.plugins}" />
        <foreach target="copyModuleArchiveForOSGI" param="currentFile">
            <path>
                <fileset dir="${osgi.build}/tempRepo" includes="**/*.car"/>
                <fileset dir="${osgi.build}/tempRepo" includes="**/*jgrapht*.jar"/>
                <fileset dir="${osgi.build}/tempRepo" includes="**/*zip4j*.jar"/>
            </path>
        </foreach>
        <makeurl property="rootUrl" file="${osgi.dist}"/>
        <repoindex name="Ceylon Distribution Bundles"
            out="${osgi.dist}/repository.xml" 
            compressed="false"
            rooturl="${rootUrl}">
            <fileset dir="${osgi.dist.plugins}" includes="*.jar"/>
        </repoindex>
    </target>

    <target name="generateFeatures">
        <property name="feature.dir" value="${osgi.dist.features}/${feature.id}_${feature.version}"/>
        <mkdir dir="${feature.dir}"/>
        <property name="featureFile" value="${feature.dir}/feature.xml"/>
        <xslt style="${osgi.p2}/${xslFileName}" in="${osgi.dist}/repository.xml" out="${featureFile}">
            <param name="featureId" expression="${feature.id}"/>
            <param name="featureVersion" expression="${feature.version}"/>
        </xslt>            
    </target>
    
    <!-- Rule to setup a plugins directory with required bundles -->
    <target name="osgi-p2-quick" depends="ceylondefs,osgi-quick">
        <mkdir dir="${osgi.dist.features}"/>
        <ceylon-osgi-version ceylonversion="${module.org.eclipse.ceylon.ide.common.version}" propertyname="osgiVersion" addtimestamp="true"/>
        <ant target="generateFeatures" inheritall="true">
            <property name="feature.id" value="org.eclipse.ceylon.ide.common.feature"/>
            <property name="feature.version" value="${osgiVersion}"/>
            <property name="xslFileName" value="generatePluginFeature.xsl"/>
        </ant>
        <ant target="generateFeatures" inheritall="true">
            <property name="feature.id" value="org.eclipse.ceylon.ide.common.dependencies.feature"/>
            <property name="feature.version" value="${osgiVersion}"/>
            <property name="xslFileName" value="generateFixedDependenciesFeature.xsl"/>
        </ant>
        <makeurl property="destinationRepository" file="${osgi.dist}"/>
        <makeurl property="categoryDefinition" file="${osgi.p2}/category.xml"/>
        <mkdir dir="${osgi.build}"/>
        <ceylon-p2
            offline="true"
            verbose="${ceylon.verbosity}"
            nodefaultrepositories="true"
            out="${osgi.dist}"
            repositoryName="Ceylon IDE Common Code"
            categoryPrefix="org.eclipse.ceylon.ide.common"
            categories="${osgi.p2}/category.xml"
            fork="true">
            <moduleset refid="modules.source"/>
            <rep url="${basedir}/modules"/>
        </ceylon-p2>
    </target>

    <target name="osgi" depends="compile,osgi-quick"/>
    <target name="osgi-p2" depends="compile,osgi-p2-quick"/>

    <target name="bundle-proxy">
        <basename file="${archivePath}" property="archiveFileName"/>
        <property name="proxy-project" value="${eclipse.project.path}/required-bundle-proxies/${archiveFileName}"/>
        <mkdir dir="${proxy-project}"/>
        <delete failonerror="false" dir="${proxy-project}/META-INF"/>
        <copy toDir="${proxy-project}" overwrite="true" verbose="true">
            <zipfileset src="${archivePath}" includes="META-INF/**"/>
            <fileset file="${archivePath}"/>
        </copy>
        <manifest file="${proxy-project}/META-INF/MANIFEST.MF" mode="update">
            <attribute name="Bundle-Classpath" value="${archiveFileName}"/>
        </manifest>
        <echo file="${proxy-project}/.project"><![CDATA[<projectDescription>
    <name>${archiveFileName}</name>
    <comment></comment>
    <projects>
    </projects>
    <buildSpec>
        <buildCommand>
            <name>org.eclipse.jdt.core.javabuilder</name>
            <arguments>
            </arguments>
        </buildCommand>
        <buildCommand>
            <name>org.eclipse.pde.ManifestBuilder</name>
            <arguments>
            </arguments>
        </buildCommand>
        <buildCommand>
            <name>org.eclipse.pde.SchemaBuilder</name>
            <arguments>
            </arguments>
        </buildCommand>
    </buildSpec>
    <natures>
        <nature>org.eclipse.pde.PluginNature</nature>
        <nature>org.eclipse.jdt.core.javanature</nature>
    </natures>
    <linkedResources>
        <link>
            <name>project</name>
            <type>2</type>
            <locationURI>PARENT-3-PROJECT_LOC/ceylon-ide-common</locationURI>
        </link>
    </linkedResources>
</projectDescription>]]></echo>     
        <echo file="${proxy-project}/.classpath"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<classpath>
    <classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/>
    <classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
    <classpathentry exported="true" kind="lib" path="${archiveFileName}" sourcepath="project"/>
    <classpathentry kind="output" path="bin"/>
</classpath>]]></echo>     
        <echo file="${proxy-project}/.gitignore"><![CDATA[/META-INF
/${archiveFileName}
/.classpath
/.project
/.gitignore
/bin/]]></echo>     
    </target>

	<target name="ide" depends="osgi-p2"/>
    <target name="ide-quick" depends="osgi-p2-quick">
        <property name="archivePath" 
            value="${out.repo}/org/eclipse/ceylon/ide/common/${module.org.eclipse.ceylon.ide.common.version}/org.eclipse.ceylon.ide.common-${module.org.eclipse.ceylon.ide.common.version}.car"/>
        <antcall target="bundle-proxy">
            <param name="archivePath" value="${archivePath}"/>
        </antcall>
    </target>
</project>
